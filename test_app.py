#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ GTA5 RP Calculator
"""

import sys
import os
import traceback

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        import tkinter as tk
        print("‚úÖ tkinter –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ tkinter: {e}")
        return False
    
    try:
        from mobile_interface import MobileInterface
        print("‚úÖ MobileInterface –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ MobileInterface: {e}")
        return False
    
    try:
        from qr_generator import QRCodeGenerator
        print("‚úÖ QRCodeGenerator –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ QRCodeGenerator: {e}")
        return False
    
    try:
        import flask
        print("‚úÖ Flask –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Flask: {e}")
        return False
    
    try:
        import qrcode
        print("‚úÖ qrcode –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ qrcode: {e}")
        return False
    
    try:
        from PIL import Image
        print("‚úÖ PIL –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ PIL: {e}")
        return False
    
    return True

def test_files():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")
    
    required_files = [
        "gta5_rp_calculator17.py",
        "mobile_interface.py", 
        "qr_generator.py",
        "items.csv",
        "requirements.txt"
    ]
    
    all_exist = True
    for file in required_files:
        if os.path.exists(file):
            print(f"‚úÖ {file} –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"‚ùå {file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            all_exist = False
    
    return all_exist

def test_syntax():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞...")
    
    try:
        with open("gta5_rp_calculator17.py", "r", encoding="utf-8") as f:
            code = f.read()
        
        compile(code, "gta5_rp_calculator17.py", "exec")
        print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        return True
    except SyntaxError as e:
        print(f"‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print(f"   –°—Ç—Ä–æ–∫–∞ {e.lineno}: {e.text}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏: {e}")
        return False

def test_mobile_interface():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
    print("\nüì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
    
    try:
        from mobile_interface import MobileInterface
        mobile = MobileInterface()
        print("‚úÖ MobileInterface —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
        deals = mobile.load_deals()
        print(f"‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–¥–µ–ª–æ–∫: {len(deals)} –∑–∞–ø–∏—Å–µ–π")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –º–æ–±–∏–ª—å–Ω–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ: {e}")
        return False

def test_qr_generator():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä QR-–∫–æ–¥–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ QR-–∫–æ–¥–æ–≤...")
    
    try:
        from qr_generator import QRCodeGenerator
        # –ù–µ —Å–æ–∑–¥–∞–µ–º GUI –¥–ª—è —Ç–µ—Å—Ç–∞, —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç
        print("‚úÖ QRCodeGenerator –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–µ QR-–∫–æ–¥–æ–≤: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è GTA5 RP Calculator")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
    files_ok = test_files()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã
    imports_ok = test_imports()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
    syntax_ok = test_syntax()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    mobile_ok = test_mobile_interface()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä QR-–∫–æ–¥–æ–≤
    qr_ok = test_qr_generator()
    
    print("\n" + "=" * 50)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   –§–∞–π–ª—ã: {'‚úÖ OK' if files_ok else '‚ùå –û–®–ò–ë–ö–ò'}")
    print(f"   –ò–º–ø–æ—Ä—Ç—ã: {'‚úÖ OK' if imports_ok else '‚ùå –û–®–ò–ë–ö–ò'}")
    print(f"   –°–∏–Ω—Ç–∞–∫—Å–∏—Å: {'‚úÖ OK' if syntax_ok else '‚ùå –û–®–ò–ë–ö–ò'}")
    print(f"   –ú–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: {'‚úÖ OK' if mobile_ok else '‚ùå –û–®–ò–ë–ö–ò'}")
    print(f"   QR-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä: {'‚úÖ OK' if qr_ok else '‚ùå –û–®–ò–ë–ö–ò'}")
    
    if files_ok and imports_ok and syntax_ok and mobile_ok and qr_ok:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É.")
        print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É:")
        print("   1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
        print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python gta5_rp_calculator17.py")
        return True
    else:
        print("\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
